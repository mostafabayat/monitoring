version: '3'

services:
  grafana:
    image: grafana/grafana:9.3.2
    container_name: grafana
    user: root
    networks:
      - monitoring
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    ports:
      - 3000:3000
  prometheus:
    image: prom/prometheus:v2.40.7
    container_name: prometheus
    user: root
    networks:
      - monitoring
    extra_hosts:
    - "host.docker.internal:host-gateway"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    ports:
      - 9090:9090
  alertmanager:
    image: prom/alertmanager:v0.24.0
    container_name: alertmanager
    user: root
    networks:
      - monitoring
    volumes:
      - ./alertmanager.yaml:/etc/alertmanager/alertmanager.yml
      - alertmanager_date:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    ports:
      - 9093:9093
  node_exporter:
    image: prom/node-exporter:v1.5.0
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'

networks:
  monitoring: {}

volumes:
  prometheus_data: {}
  grafana_data: {}
  alertmanager_date: {}